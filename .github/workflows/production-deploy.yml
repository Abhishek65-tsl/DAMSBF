# name: Production Deployment

# on:
#   push:
#     branches: [ production ]

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Setup Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '18'
#           cache: 'npm'

#       - name: Install dependencies
#         run: npm ci

#       - name: Build
#         run: npm run build

#       - name: Deploy to GitHub Pages
#         uses: peaceiris/actions-gh-pages@v3
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           publish_dir: ./dist # Or your build output directory
#           force_orphan: true # Recommended for gh-pages


name: Production Deploy

on:
  push:
    branches: [ production ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist # Or your build output directory
          force_orphan: true # Recommended for gh-pages
          
  # Optional: Deploy Python model if needed
  deploy-python-model:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f ai/requirements.txt ]; then pip install -r ai/requirements.txt; fi
          
      # This is a placeholder - replace with your actual model deployment steps
      # For example, you might upload the model to a cloud service
      - name: Deploy model
        run: |
          echo "Deploying Python model..."
          # Add your model deployment commands here
          # Example: aws s3 cp ai/model/trained_model.pkl s3://your-bucket/models/
